<?php
/**
 * CLI Implementation for NaiveBayesClassifier project
 * 
 * @package	Simple NaiveBayesClassifier for PHP
 * @subpackage	CLI Runner - Implementation
 * @author	Batista R. Harahap <batista@bango29.com>
 * @link	http://www.bango29.com
 * @license	MIT License - http://www.opensource.org/licenses/mit-license.php
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a 
 * copy of this software and associated documentation files (the "Software"), 
 * to deal in the Software without restriction, including without limitation 
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Software, and to permit persons to whom the 
 * Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in 
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 */

ini_set('memory_limit','512M');

require_once 'NaiveBayesClassifier.php';

$nbc = new NaiveBayesClassifier(array(
	'store' => array(
		'mode'	=> 'mongodb',
		'db'	=> array(
			'db_host'	=> '127.0.0.1',
			'db_port'	=> '27017',
			'db_name'	=> 'bayes'
		)
	),
	'debug' => FALSE
));

$nbc->train('Augmented reality (AR) is a live, direct or indirect, view of a physical, real-world environment whose elements are augmented by computer-generated sensory input such as sound, video, graphics or GPS data. It is related to a more general concept called mediated reality, in which a view of reality is modified (possibly even diminished rather than augmented) by a computer. As a result, the technology functions by enhancing one’s current perception of reality[1]. By contrast, virtual reality replaces the real world with a simulated one. Augmentation is conventionally in real-time and in semantic context with environmental elements, such as sports scores on TV during a match. With the help of advanced AR technology (e.g. adding computer vision and object recognition) the information about the surrounding real world of the user becomes interactive and digitally manipulable. Artificial information about the environment and its objects can be overlaid on the real world. The term augmented reality is believed to have been coined in 1990 by Thomas Caudell, working at Boeing. Augmented reality is considered an extension of virtual reality. Virtual reality (VR) is a virtual space in which players immerse themselves into that space and exceed the bounds of physical reality. In virtual reality, time, physical laws and material properties may no longer be thought of as true, in contrast to the real-world environment. Instead of considering AR and VR as exact opposite concepts, Milgram et al. claim them as the reality-virtual (RV) continuum (Milgram, Takemura, Utsumi and Kishino, 1994). AR has become common in sports telecasting. The yellow "first down" line seen in television broadcasts of American football games shows the line the offensive team must cross to receive a first down using the 1st & Ten system. The real-world elements are the football field and players, and the virtual element is the yellow line, which augments the image in real time. AR is also used in association football to show the result (or an advertisement) in the center circle. It is also used to display offside situations. Similarly, in ice hockey an AR colored trail showed location and direction of the puck, but was dismissed by hockey purists. Sections of rugby fields and cricket pitches display sponsored images. Swimming telecasts often add a line across the lanes to indicate the position of the current record holder as a race proceeds to allow viewers to compare the current race to the best performance. As an example of mediated (diminished) reality, the network may hide a real message or replace a real ad message with a virtual message. Some examples of spatial augmented reality displays include shader lamps, mobile projectors, virtual tables, and smart projectors, described by O. Bimber and R. Raskar in 2005. Shader lamps, developed by Raskar et al. in 1999, mimic and augment reality by projecting imagery onto neutral objects, providing the opportunity to enhance the object’s appearance with materials of a simple unit- a projector, camera, and sensor. Handheld projectors further this goal by enabling cluster configurations of environment sensing, reducing the need for additional peripheral sensing. Instead of the user wearing or carrying the display such as with head-mounted displays or handheld devices, Spatial Augmented Reality (SAR)[13] makes use of digital projectors to display graphical information onto physical objects. The key difference in SAR is that the display is separated from the users of the system. Because the displays are not associated with each user, SAR scales naturally up to groups of users, thus allowing for collocated collaboration between users. SAR has several advantages over traditional head-mounted displays and handheld devices. The user is not required to carry equipment or wear the display over their eyes. This makes spatial AR a good candidate for collaborative work, as the users can see each other’s faces. A system can be used by multiple people at the same time without each having to wear a head-mounted display. Spatial AR does not suffer from the limited display resolution of current head-mounted displays and portable devices. A projector based display system can simply incorporate more projectors to expand the display area. Where portable devices have a small window into the world for drawing, a SAR system can display on any number of surfaces of an indoor setting at once. The drawbacks, however, are that SAR systems of projectors do not work so well in sunlight and also require a surface on which to project the computer-generated graphics. Augmentations cannot simply hang in the air as they do with handheld and HMD-based AR. The tangible nature of SAR, though, makes this an ideal technology to support design, as SAR supports both a graphical visualisation and passive haptic sensation for the end users. People are able to touch physical objects, and it is this process that provides the passive haptic sensation.', 'augmented reality');
$nbc->train('Android is a Linux-based operating system designed primarily for touchscreen mobile devices such as smartphones and tablet computers, developed by Google in conjunction with the Open Handset Alliance.[2] Initially developed by Android Inc, whom Google financially backed and later purchased in 2005,[9] Android was unveiled in 2007 along with the founding of the Open Handset Alliance, a consortium of 86 hardware, software, and telecommunication companies devoted to advancing open standards for mobile devices. Google releases the Android code as open-source, under the Apache License.[11] The Android Open Source Project (AOSP), lead by Google, is tasked with the maintenance and further development of Android.[12] Additionally, Android has a large community of developers writing applications ("apps") that extend the functionality of devices. Developers write primarily in a customized version of Java,[13] and apps can be downloaded from online stores such as Google Play (formerly Android Market), the app store run by Google, or third-party sites. In June 2012, there were more than 600,000 apps available for Android, and the estimated number of applications downloaded from Google Play was 20 billion. Google acquired Android Inc. on August 17, 2005, making Android Inc. a wholly owned subsidiary of Google. Key employees of Android Inc., including Andy Rubin, Rich Miner and Chris White, stayed at the company after the acquisition.[9] Not much was known about Android Inc. at the time of the acquisition, but many assumed that Google was planning to enter the mobile phone market with this move. The user interface in Android is based on the concept of direct manipulation,[33] using single- and multi-touch inputs like swiping, tapping, pinching and reverse pinching to manipulate on-screen objects.[33] The response to user input is designed to be immediate and provides a fluid touch interface. Internal hardware such as accelerometers, gyroscopes and proximity sensors are used by some applications to respond to additional user actions, for example adjusting the screen from portrait to landscape depending on how the device is orientated, or allowing the user to steer a vechicle in a racing game by rotating the device, simulating control of a steering wheel. The Android Open Source Project is led by Google, and tasked with the maintenance and development of Android.[68] According to the project "The goal of the Android Open Source Project is to create a successful real-world product that improves the mobile experience for end users."[69] AOSP also maintains the Android Compatibility Program, defining an "Android compatible" device "as one that can run any application written by third-party developers using the Android SDK and NDK", to prevent incompatible Android implementations.[69] The compatibility program is optional and free of charge, with the Compatibility Test Suite also free and open-source.', 'android');
$nbc->train('The open-source model includes the concept of concurrent yet different agendas and differing approaches in production, in contrast with more centralized models of development such as those typically used in commercial software companies.[2] A main principle and practice of open-source software development is peer production by bartering and collaboration, with the end-product, source-material, "blueprints", and documentation available at no cost to the public. This model is also used for the development of open-source-appropriate technologies, solar photovoltaic technology [3] and open-source drug discovery. The concept of free sharing of technological information existed long before computers. For example, cooking recipes have been shared since the beginning of human culture. Most economists agree that open-source candidates have an information good[12] (also termed "knowledge good") aspect. In general, this suggests that the original work involves a great deal of time, money, and effort. However, the cost of reproducing the work is very low, so that additional users may be added at zero or near zero cost – this is referred to as the marginal cost of a product. Copyright creates a monopoly so the price charged to consumers can be significantly higher than the marginal cost of production. This allows the author to recoup the cost of making the original work, without needing to find a single customer that can bear the entire cost. Conventional copyright thus creates access costs for consumers who value the work more than the marginal cost but less than the initial production cost. Access costs also pose problems for authors who wish to create a derivative work - such as a copy of a software program modified to fix a bug or add a feature, or a remix of a song - but are unable or unwilling to pay the copyright holder for the right to do so. Open-source software is software whose source code is published and made available to the public, enabling anyone to copy, modify and redistribute the source code without paying royalties or fees.[19] Open-source code can evolve through community cooperation. These communities are composed of individual programmers as well as very large companies. Many of these individuals programmers who start an open-source project usually end up as large companies with open-source programs.[citation needed] Examples of open-source software products are.', 'open source');
$nbc->train('Apple was established on April 1, 1976 by Steve Jobs, Steve Wozniak, and Ronald Wayne[1] to sell the Apple I personal computer kit. The kits were hand-built by Wozniak[23][24] and first shown to the public at the Homebrew Computer Club.[25] The Apple I was sold as a motherboard (with CPU, RAM, and basic textual-video chips)—less than what is today considered a complete personal computer.[26] The Apple I went on sale in July 1976 and was market-priced at $666.66 ($2,723 in 2012 dollars, adjusted for inflation.). Jobs and several Apple employees including Jef Raskin visited Xerox PARC in December 1979 to see the Xerox Alto. Xerox granted Apple engineers three days of access to the PARC facilities in return for the option to buy 100,000 shares (800,000 split-adjusted shares) of Apple at the pre-IPO price of $10 a share.[40] Jobs was immediately convinced that all future computers would use a graphical user interface (GUI), and development of a GUI began for the Apple Lisa. Apple achieved widespread success with consumer electronics that refer to Apple iPhone, iPod Touch and iPad that introduced innovations in respective devices: mobile phones, portable music players and personal computers. The business model of offering a store for applications to be purchased was an innovation from a business point of view. Touch screens had been invented and seen in mobile devices before, but Apple was the first to achieve mass market adoption of a touch screen based user interface that included particular pre-programmed touch gestures. The widespread success was continuing when Apple co-founder and chief executive officer Steve Jobs died, but some speculated that this would lead to Apple days of technological innovation and compelling product design to become things of the past. ', 'apple');

$_start = microtime(TRUE);

if(!empty($argv) && count($argv) > 1) {
	for($i=1, $max=count($argv); $i<$max; $i++) {
		$result = $nbc->classify($argv[$i]);
		
		echo "{$argv[$i]} - Winning Set: ", PHP_EOL;
		var_dump($result);
		echo PHP_EOL;
	}
}
else {
	die('No arguments passed.'.PHP_EOL);
}

$_end = microtime(TRUE);
echo 	"Memory Usage: ", memory_get_usage()/1024, " KB", PHP_EOL,
	"TIME Spent: ", ($_end - $_start), " seconds", PHP_EOL, PHP_EOL;